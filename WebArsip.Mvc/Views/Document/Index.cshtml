@using WebArsip.Mvc.Helpers
@using WebArsip.Mvc.Models.ViewModels
@model IEnumerable<DocumentViewModel>

@{
    ViewData["Title"] = "Documents";
    Layout = "_LayoutPrivate";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>📄 Documents</h2>

    @if (UserRoleHelper.HasAccess(Context, "Document.Create"))
    {
        <a asp-controller="Document" asp-action="Create" class="btn btn-primary">➕ Add Document</a>
    }
</div>

<table id="documentTable" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>No</th>
            <th>ID</th>
            <th>Title</th>
            <th>Description</th>
            <th>Status</th>
            <th>Created</th>
            <th>Updated</th>
            <th>File</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var doc in Model)
        {
            <tr>
                <td></td>
                <td>@doc.DocId</td>
                <td>@doc.Title</td>
                <td>@doc.Description</td>
                <td>@doc.Status</td>
                <td>@doc.CreatedDate.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@(doc.UpdatedAt?.ToString("yyyy-MM-dd HH:mm") ?? "-")</td>

                <td>
                    @if (UserRoleHelper.HasAccess(Context, "Document.Download") && !string.IsNullOrEmpty(doc.FilePath))
                    {
                        <a href="@doc.FilePath" target="_blank" class="btn-download btn btn-sm btn-success" data-id="@doc.DocId" data-name="@doc.Title">📂 Download</a>
                    }

                    <button class="btn btn-info btn-preview" data-id="@doc.DocId" data-filepath="@doc.FilePath">
                        👁 Preview
                    </button>
                </td>

                <td>
                    <a asp-action="Details" asp-route-id="@doc.DocId" class="btn btn-sm btn-info">✏ Details</a>

                    @if (UserRoleHelper.HasAccess(Context, "Document.Edit"))
                    {
                        <a asp-action="Edit" asp-route-id="@doc.DocId" class="btn btn-sm btn-warning">✏ Edit</a>
                    }

                    @if (UserRoleHelper.HasAccess(Context, "Document.Delete"))
                    {
                        <button type="button" class="btn btn-sm btn-danger delete-btn" data-id="@doc.DocId" data-title="@doc.Title">🗑 Delete</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="modal fade" id="previewModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Preview Dokumen</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <iframe id="previewFrame" width="100%" height="700px" frameborder="0"></iframe>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
                $(document).ready(function () {
            var table = $('#documentTable').DataTable({ pageLength: 10 });

            table.on('order.dt search.dt', function () {
                table.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();

            $(document).on('click', '.delete-btn', function () {
                var btn = $(this);
                var id = btn.data('id');
                var title = btn.data('title');

                Swal.fire({
                    title: "Yakin ingin hapus?",
                    text: "Dokumen \"" + title + "\" akan dihapus permanen.",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Ya, hapus!",
                    cancelButtonText: "Batal"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/Document/Delete/' + id,
                            type: 'POST',
                            success: function (res) {
                                if (res.success) {
                                    Swal.fire({ icon: 'success', title: res.message, timer: 1500, showConfirmButton: false });
                                    table.row(btn.closest('tr')).remove().draw(false);
                                } else {
                                    Swal.fire('Error', res.message, 'error');
                                }
                            },
                            error: function () {
                                Swal.fire('Error', 'Gagal menghapus dokumen.', 'error');
                            }
                        });
                    }
                });
            });

            $(document).on('click', '.btn-download', function (e) {
            e.preventDefault();
            const id = $(this).data('id');
            const name = $(this).data('name');

            Swal.fire({
                title: 'Download File?',
                text: `Apakah kamu ingin mendownload dokumen "${name}"?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Ya, download',
                cancelButtonText: 'Batal',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Downloading...',
                        html: '<div class="spinner-border text-primary" role="status"></div>',
                        showConfirmButton: false,
                        allowOutsideClick: false
                    });

                    window.location.href = `/Document/Download/${id}`;

                    setTimeout(() => {
                        Swal.close();
                        Swal.fire({
                            icon: 'success',
                            title: 'Download dimulai!',
                            text: 'File kamu sedang didownload.',
                            timer: 1800,
                            showConfirmButton: false
                        });
                    }, 1500);
                }
            });
        });

                $(document).on("click", ".btn-preview", function () {
            const docId = $(this).data("id");
            const filePath = $(this).data("filepath");
            const ext = filePath.split('.').pop().toLowerCase();
            let srcUrl = "";

            if (ext === "pdf") {
                srcUrl = `http://localhost:5287/api/document/preview/${docId}`;
            } else if (["doc", "docx", "xls", "xlsx"].includes(ext)) {
                   const encoded = encodeURIComponent(`http://localhost:5287/api/document/preview/${docId}`);
                   srcUrl = `https://view.officeapps.live.com/op/embed.aspx?src=${encoded}`;
            } else {
                srcUrl = "";
            }

            if (srcUrl) {
                $("#previewFrame").attr("src", srcUrl);
                $("#previewModal").modal("show");
            } else {
                Swal.fire({
                    icon: "warning",
                    title: "File tidak bisa dipreview",
                    text: "Tipe file ini tidak mendukung preview.",
                });
            }
        });

        $(document).on('click', '.btn-download', function (e) {
            e.preventDefault();
            const id = $(this).data('id');
            const name = $(this).data('name');

            Swal.fire({
                title: 'Download File?',
                text: `Apakah kamu ingin mendownload dokumen "${name}"?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Ya, download',
                cancelButtonText: 'Batal',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Downloading...',
                        html: '<div class="spinner-border text-primary" role="status"></div>',
                        showConfirmButton: false,
                        allowOutsideClick: false
                    });

                    window.location.href = `/Document/Download/${id}`;

                    setTimeout(() => {
                        Swal.close();
                        Swal.fire({
                            icon: 'success',
                            title: 'Download dimulai!',
                            text: 'File kamu sedang didownload.',
                            timer: 1800,
                            showConfirmButton: false
                        });
                    }, 1500);
                }
            });
        });

        @if (TempData["Success"] != null)
        {
            <text>
                    Swal.fire({ toast: true, position: 'top-end', icon: 'success', title: '@TempData["Success"]', showConfirmButton: false, timer: 2000 });
            </text>
        }
        @if (TempData["Error"] != null)
        {
            <text>
                    Swal.fire({ toast: true, position: 'top-end', icon: 'error', title: '@TempData["Error"]', showConfirmButton: false, timer: 2000 });
            </text>
        }
        });
    </script>
}
