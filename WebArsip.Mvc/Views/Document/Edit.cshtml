@using WebArsip.Mvc.Models.ViewModels
@model DocumentViewModel
@{
    ViewData["Title"] = "Edit Document";
    Layout = "_LayoutPrivate";
}

<h2>✏️ Edit Document</h2>

<form id="editDocForm" enctype="multipart/form-data">
    <input type="hidden" asp-for="DocId" />

    <div class="mb-3">
        <label for="Title" class="form-label">Title</label>
        <input asp-for="Title" class="form-control" required />
    </div>

    <div class="mb-3">
        <label for="Description" class="form-label">Description</label>
        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
    </div>

    <div class="mb-3">
        <label for="FileUpload" class="form-label">Replace File (Optional)</label>
        <input type="file" name="FileUpload" class="form-control" accept=".doc,.docx,.xls,.xlsx,.pdf" />
        @if (!string.IsNullOrEmpty(Model.FilePath))
        {
            <p class="mt-2">
                📄 Current File:
                <a href="@Url.Action("Download", "Document", new { id = Model.DocId })" target="_blank">
                    @Model.OriginalFileName
                </a>
            </p>
        }
    </div>

    <!-- Progress bar -->
    <div class="progress mb-3" style="height: 25px; display: none;">
        <div id="uploadProgress" class="progress-bar progress-bar-striped progress-bar-animated"
             role="progressbar" style="width: 0%">
            0%
        </div>
    </div>

    <div class="mb-3">
        <label for="Status" class="form-label">Status</label>
        <select asp-for="Status" class="form-select">
            <option value="Draft" selected>Draft</option>
            <option value="Published">Published</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary">💾 Update</button>
    <a asp-action="Index" class="btn btn-secondary">🔙 Back</a>
    @if (!string.IsNullOrEmpty(Model.FilePath))
    {
        <div class="mt-4">
            <h5>📄 File Preview:</h5>
            @{
                var fileUrl = $"http://localhost:5077{Model.FilePath}";
                var encodedUrl = Uri.EscapeDataString(fileUrl);
                var isOfficeFile = Model.OriginalFileName.EndsWith(".doc") || Model.OriginalFileName.EndsWith(".docx") ||
                Model.OriginalFileName.EndsWith(".xls") || Model.OriginalFileName.EndsWith(".xlsx");
            }

            @if (isOfficeFile)
            {
                <iframe src="https://view.officeapps.live.com/op/view.aspx?src=@encodedUrl"
                        width="100%" height="600px" frameborder="0"></iframe>
            }
            else if (Model.OriginalFileName.EndsWith(".pdf"))
            {
                <iframe src="@fileUrl" width="100%" height="600px" frameborder="0"></iframe>
            }
            else
            {
                <p class="text-muted">⚠️ Format file tidak dapat dipreview secara langsung.</p>
            }
        </div>
    }
</form>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("editDocForm");
            const fileInput = form.querySelector("input[name='FileUpload']");
            const progressBarContainer = document.querySelector(".progress");
            const progressBar = document.getElementById("uploadProgress");
            const allowedExts = [".doc", ".docx", ".xls", ".xlsx", ".pdf", ".PDF"];

            // Validasi ekstensi file
            fileInput.addEventListener("change", function () {
                const fileName = this.files[0]?.name || "";
                const ext = fileName.substring(fileName.lastIndexOf(".")).toLowerCase();

                if (!allowedExts.includes(ext)) {
                    Swal.fire({
                        icon: "error",
                        title: "File tidak valid!",
                        text: "Hanya file Word, Excel, atau PDF yang diperbolehkan.",
                        confirmButtonColor: "#d33"
                    });
                    this.value = "";
                    return;
                }
            });

            // Submit form pakai AJAX + progress bar
            form.addEventListener("submit", async function (e) {
                e.preventDefault();

                const formData = new FormData(form);
                const file = fileInput.files[0];

                progressBarContainer.style.display = "block";
                progressBar.style.width = "0%";
                progressBar.textContent = "0%";

                try {
                    const xhr = new XMLHttpRequest();
                    xhr.open("POST", "/Document/Edit", true);

                    xhr.upload.addEventListener("progress", function (e) {
                        if (e.lengthComputable) {
                            const percent = Math.round((e.loaded / e.total) * 100);
                            progressBar.style.width = percent + "%";
                            progressBar.textContent = percent + "%";
                        }
                    });

                    xhr.onload = function () {
                        if (xhr.status === 200 || xhr.status === 302) {
                            Swal.fire({
                                icon: "success",
                                title: "Berhasil!",
                                text: "Dokumen berhasil diperbarui!",
                                timer: 2000,
                                showConfirmButton: false
                            }).then(() => {
                                window.location.href = "/Document/Index";
                            });
                        } else {
                            Swal.fire({ icon: "error", title: "Gagal", text: "Gagal memperbarui dokumen." });
                            progressBarContainer.style.display = "none";
                        }
                    };

                    xhr.onerror = function () {
                        Swal.fire({ icon: "error", title: "Error", text: "Terjadi kesalahan jaringan." });
                        progressBarContainer.style.display = "none";
                    };

                    xhr.send(formData);
                } catch (error) {
                    Swal.fire({ icon: "error", title: "Error", text: "Terjadi error tidak diketahui." });
                    progressBarContainer.style.display = "none";
                }
            });
        });

            const fileInput = document.querySelector('input[name="FileUpload"]');

            fileInput.addEventListener('change', function (e) {
                if (this.files.length > 0) {
                    Swal.fire({
                        title: 'Ganti File?',
                        text: 'File lama akan diganti dengan file baru. Lanjutkan?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Ya, ganti',
                        cancelButtonText: 'Batal',
                        reverseButtons: true
                    }).then((result) => {
                        if (!result.isConfirmed) {
                            this.value = ""; // batalin upload baru
                        }
                    });
                }
            });

            $(function () {
                const success = '@TempData["Success"]';
                const error = '@TempData["Error"]';
                if (success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Berhasil',
                        text: success,
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
                if (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Gagal',
                        text: error
                    });
                }
            });
    </script>
}